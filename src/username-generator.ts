import { randomInt } from "crypto";

const adjectives = [
  "abstract",
  "agile",
  "applicative",
  "autonomous",
  "balanced",
  "binary",
  "boolean",
  "cached",
  "compiled",
  "compressed",
  "concurrent",
  "constant",
  "cryptographic",
  "cyber",
  "debugged",
  "decentralized",
  "deterministic",
  "distributed",
  "dynamic",
  "emulated",
  "encapsulated",
  "encrypted",
  "endomorphic",
  "functional",
  "generative",
  "hierarchical",
  "homomorphic",
  "hybrid",
  "idempotent",
  "immutable",
  "interactive",
  "interpreted",
  "iterative",
  "logical",
  "modular",
  "monadic",
  "mutable",
  "neural",
  "parallel",
  "persistent",
  "polymorphic",
  "procedural",
  "programmable",
  "quantum",
  "reactive",
  "recursive",
  "redundant",
  "relational",
  "responsive",
  "scalable",
  "secure",
  "sequential",
  "serial",
  "structured",
  "symmetric",
  "synchronous",
  "systematic",
  "temporal",
  "transient",
  "unified",
  "virtual",
  "volatile",
  "wired",
  "wireless",
];

const nouns = [
  "algorithm",
  "array",
  "bit",
  "blockchain",
  "byte",
  "cache",
  "circuit",
  "closure",
  "cloud",
  "cluster",
  "compiler",
  "database",
  "debugger",
  "device",
  "encryption",
  "endpoint",
  "file",
  "firewall",
  "framework",
  "function",
  "functor",
  "gateway",
  "hash",
  "heap",
  "interface",
  "kernel",
  "kleisli",
  "lambda",
  "library",
  "machine",
  "memory",
  "module",
  "monad",
  "monoid",
  "network",
  "node",
  "object",
  "packet",
  "parameter",
  "platform",
  "process",
  "protocol",
  "proxy",
  "query",
  "queue",
  "register",
  "repository",
  "router",
  "script",
  "segment",
  "semaphore",
  "server",
  "socket",
  "stack",
  "stream",
  "switch",
  "syntax",
  "system",
  "thread",
  "token",
  "transaction",
  "variable",
  "vector",
  "workflow",
];

function isSorted(array: string[]) {
  return array.every((_, i) => i === 0 || array[i] >= array[i - 1]);
}

function isUnique(array: string[]) {
  return new Set(array).size === array.length;
}

console.assert(adjectives.length === 64);
console.assert(nouns.length === 64);
console.assert(isSorted(adjectives));
console.assert(isSorted(nouns));
console.assert(isUnique(adjectives));
console.assert(isUnique(nouns));
console.assert(adjectives.every((a) => !nouns.includes(a)));

export function generateUsername(): string {
  const adjective = adjectives[randomInt(adjectives.length)];
  const noun = nouns[randomInt(nouns.length)];
  return `${adjective}-${noun}`;
}
